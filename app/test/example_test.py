import unittest


class MyTestCase(unittest.TestCase):

    def test_assert_rises(self):
        """Test for  an exception generated by a list"""
        with self.assertRaises(AttributeError):
            [].get

    def test_assert_equal(self):
        self.assertEqual(1, 1)

    def test_assert_almost_equal_delta_0_5(self):
        self.assertAlmostEqual(1, 1.2, delta=0.5)

    def test_assert_almost_equal_places(self):
        self.assertAlmostEqual(1, 1.00001, places=4)

    def test_assert_raises(self):
        self.assertRaises(ValueError, int, "a")

    def test_assert_raises_alternative(self):
        with self.assertRaises(AttributeError):
            [].get

    def test_assert_dict_contains_subset(self):
        expected = {'a': 'b'}
        actual = {'a': 'b', 'c': 'd', 'e': 'f'}
        self.assertDictContainsSubset(expected, actual)

    def test_assert_dict_equal(self):
        expected = {'a': 'b', 'c': 'd', 'e': 'f'}
        actual = {'a': 'b', 'c': 'd', 'e': 'f'}
        self.assertDictEqual(expected, actual)


if __name__ == '__main__':
    unittest.main()
